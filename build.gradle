group 'com.milbar'
version '1.0-SNAPSHOT'

ext.junitPlatformVersion = '1.1.0'
ext.junitJupiterVersion  = '5.1.0'
ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '5.1.0'

buildscript {
    ext.kotlin_version = '1.2.30'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

apply plugin: 'javafx-gradle-plugin'

jfx {
    // minimal requirement for jfxJar-task
    mainClass = 'com.milbar.MainApp'
    // minimal requirement for jfxNative-task
    vendor = 'milbar'
}




dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'com.miglayout:miglayout-javafx:4.2'
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'com.github.stasbar:easy-logger:v1.0'
    implementation 'org.controlsfx:controlsfx:9.0.0'
    implementation 'com.google.code.gson:gson:2.8.4'
    testImplementation"org.mockito:mockito-core:2.+"
    // JUnit Jupiter API and TestEngine implementation
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    testImplementation("junit:junit:${junit4Version}")
    testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}